! implement a new protocol with a double loop framework, one for reading and one for writing. This will make threads attempt to lock as soon as they recieve messages and therefore correct the queue.
make get sec get millisec
make option framework
kill messages should be overwritten by new threads
add provisions to still connect to a shm with the wrong version if there are no connections and it was made by mm
create function to recursively create directories
alter makefile to produce files from .in
check for and catch memcpy errors
create example files
add maximums
add multiple makefiles
call scripts with make
determine if sem should lock while reading init msg
add more error checking... including overwriting existing values, especially in shcon_util. one example- will overwrite semaphore IDs. especially prominent but by far not the only case.
add hash to msg_t
make it so that resolved blame is not handled by overwriting err_num
refer to system documentation in local documentation
modify locking to reset if there are no connections and it is locked, or if a locking thread is dead
change msg date to msg time
make messages have a member to indicate the time from when they're sent as well as when they're created so that timeout is correct
write styleguide
make new errors codes
find a good place to put stray file documentation
make sure you commented scripts
figure out if resetting read semaphore manually with SEM_UNDOs pending is safe
